#       #  * see aodv_802_15_4.tcl
#       #  http://elmurod.net/en/index.php/archives/72 
#       # Generated by Topology Generator for Network Simulator (c) Elmurod Talipov
	set val(chan)          Channel/WirelessChannel      ;# channel type
	set val(prop)          Propagation/TwoRayGround     ;# radio-propagation model
	set val(netif)         Phy/WirelessPhy/802_15_4     ;# network interface type
	set val(mac)           Mac/802_15_4                 ;# MAC type
6	set val(ifq)           Queue/DropTail/PriQueue      ;# interface queue type
7	set val(ll)            LL                           ;# link layer type
8	set val(ant)           Antenna/OmniAntenna          ;# antenna model
9	set val(ifqlen)        100                  ;# max packet in ifq
10	set val(nn)            500              ;# number of mobilenodes
11	set val(rp)            AODV             ;# protocol tye
12	set val(x)             1000             ;# X dimension of topography
13	set val(y)             500              ;# Y dimension of topography
14	set val(stop)          500              ;# simulation period
15	set val(energymodel)   EnergyModel          ;# Energy Model
16	set val(initialenergy) 100              ;# value
17	 
18	set ns              [new Simulator]
19	set tracefd         [open trace-aodv-802-15-4.tr w]
20	set namtrace        [open nam-aodv-802-15-4.nam w]
21	 
22	$ns trace-all $tracefd
23	$ns namtrace-all-wireless $namtrace $val(x) $val(y)

#       # Let’s set radio transmission range to 40 meters, but this does not mean exactly 40 meters. 
#       # The code below filters packet with receiving signal strength above “40 meters”.
	set dist(5m)  7.69113e-06
2	set dist(9m)  2.37381e-06
3	set dist(10m) 1.92278e-06
4	set dist(11m) 1.58908e-06
5	set dist(12m) 1.33527e-06
6	set dist(13m) 1.13774e-06
7	set dist(14m) 9.81011e-07
8	set dist(15m) 8.54570e-07
9	set dist(16m) 7.51087e-07
10	set dist(20m) 4.80696e-07
11	set dist(25m) 3.07645e-07
12	set dist(30m) 2.13643e-07
13	set dist(35m) 1.56962e-07
14	set dist(40m) 1.20174e-07
15	Phy/WirelessPhy set CSThresh_ $dist(40m)
16	Phy/WirelessPhy set RXThresh_ $dist(40m)

#       # And lets set topography as flat, deploy nodes randomly in an area of 1000 x 500 sqm. 
1	# set up topography object
2	set topo       [new Topography]
3	$topo load_flatgrid $val(x) $val(y)
4	 
5	create-god $val(nn)
6	 
7	# configure the nodes
8	$ns node-config -adhocRouting $val(rp)
9	            -llType $val(ll)
10	             -macType $val(mac)
11	             -ifqType $val(ifq)
12	             -ifqLen $val(ifqlen)
13	             -antType $val(ant)
14	             -propType $val(prop)
15	             -phyType $val(netif)
16	             -channel [new $val(chan)]
17	             -topoInstance $topo
18	             -agentTrace ON
19	             -routerTrace ON
20	             -macTrace  OFF
21	             -movementTrace OFF
22	             -energyModel $val(energymodel)
23	             -initialEnergy $val(initialenergy)
24	             -rxPower 35.28e-3
25	             -txPower 31.32e-3
26	         -idlePower 712e-6
27	         -sleepPower 144e-9
28	 
29	             #-IncomingErrProc MultistateErrorProc
30	             #-OutgoingErrProc MultistateErrorProc
31	 
32	for {set i 0} {$i < $val(nn) } { incr i } {
33	        set mnode_($i) [$ns node]
34	}
35	 
36	for {set i 1} {$i < $val(nn) } { incr i } {
37	    $mnode_($i) set X_ [ expr {$val(x) * rand()} ]
38	    $mnode_($i) set Y_ [ expr {$val(y) * rand()} ]
39	    $mnode_($i) set Z_ 0
40	}

#       # And we are goig to deploy sink node in the center of area, i.e. at [500, 250].
1	# Position of Sink
2	$mnode_(0) set X_ [ expr {$val(x)/2} ]
3	$mnode_(0) set Y_ [ expr {$val(y)/2} ]
4	$mnode_(0) set Z_ 0.0
5	$mnode_(0) label "Sink"

#       # The code below is useful how big the nodes are going to be shown 
#       # in NAM (network animator), thus it does not have meaning in real simulation.
1	for {set i 0} {$i < $val(nn)} { incr i } {
2	    $ns initial_node_pos $mnode_($i) 10
3	}

#       # Finally, we have deployed nodes, and remained important thing is establish connection. 
#       # We are going to use UDP protocol with CBR (constant bit rate, 
#       # interval (interval_) is set to 2 seconds)      
1	#Setup a UDP connection
2	set udp [new Agent/UDP]
3	$ns attach-agent $mnode_(10) $udp
4	 
5	set sink [new Agent/Null]
6	$ns attach-agent $mnode_(0) $sink
7	 
8	$ns connect $udp $sink
9	$udp set fid_ 2
10	 
11	#Setup a CBR over UDP connection
12	set cbr [new Application/Traffic/CBR]
13	$cbr attach-agent $udp
14	$cbr set type_ CBR
15	$cbr set packet_size_ 50
16	$cbr set rate_ 0.1Mb
17	$cbr set interval_ 2
18	#$cbr set random_ false
19	 
20	$ns at 5.0 "$cbr start"
21	$ns at [expr $val(stop) - 5] "$cbr stop"
22	 
23	# Telling nodes when the simulation ends
24	for {set i 0} {$i < $val(nn) } { incr i } {
25	    $ns at $val(stop) "$mnode_($i) reset;"
26	}
27	 
28	# ending nam and the simulation
29	$ns at $val(stop) "$ns nam-end-wireless $val(stop)"
30	$ns at $val(stop) "stop"
31	$ns at [expr $val(stop) + 0.01] "puts "end simulation"; $ns halt"
32	proc stop {} {
33	    global ns tracefd namtrace
34	    $ns flush-trace
35	    close $tracefd
36	    close $namtrace
37	}
38	 
39	$ns run
